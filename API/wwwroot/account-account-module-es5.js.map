{"version":3,"sources":["webpack:///src/app/account/register/register.component.ts","webpack:///src/app/account/register/register.component.html","webpack:///src/app/account/login/login.component.ts","webpack:///src/app/account/login/login.component.html","webpack:///src/app/account/account.module.ts","webpack:///src/app/account/account-routing.module.ts"],"names":["RegisterComponent","fb","accService","router","createRegisterForm","registerForm","group","displayName","required","email","pattern","validateEmailNotTaken","password","register","value","subscribe","console","log","navigateByUrl","error","errors","control","pipe","checkEmailExists","res","emailExists","onSubmit","LoginComponent","activatedRoutes","returnUrl","snapshot","queryParams","createLoginForm","loginForm","login","AccountModule","routes","path","component","AccountRoutingModule","forChild"],"mappings":"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","file":"account-account-module-es5.js","sourcesContent":["import { Router } from '@angular/router';\r\nimport { AccountService } from './../account.service';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  AsyncValidatorFn,\r\n} from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { timer, of } from 'rxjs';\r\nimport { switchMap, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  errors: string[];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private accService: AccountService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.createRegisterForm();\r\n  }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.fb.group({\r\n      displayName: [null, [Validators.required]],\r\n      email: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n          Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$'),\r\n        ],\r\n        [this.validateEmailNotTaken()],\r\n      ],\r\n      password: [null, [Validators.required]],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.accService.register(this.registerForm.value).subscribe(\r\n      () => {\r\n        console.log('user registered');\r\n        this.router.navigateByUrl('/shop');\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        this.errors = error.errors;\r\n      }\r\n    );\r\n  }\r\n\r\n  validateEmailNotTaken(): AsyncValidatorFn {\r\n    return (control) => {\r\n      return timer(500).pipe(\r\n        switchMap(() => {\r\n          if (!control.value) {\r\n            return of(null);\r\n          }\r\n          return this.accService.checkEmailExists(control.value).pipe(\r\n            map((res) => {\r\n              return res ? { emailExists: true } : null;\r\n            })\r\n          );\r\n        })\r\n      );\r\n    };\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center mt-5\">\r\n  <div class=\"col-3\">\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"text-center mb-4\">\r\n        <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\r\n      </div>\r\n      <app-text-input\r\n        formControlName=\"displayName\"\r\n        [label]=\"'Display Name'\"\r\n      ></app-text-input>\r\n      <app-text-input\r\n        formControlName=\"email\"\r\n        [label]=\"'Email Address'\"\r\n      ></app-text-input>\r\n      <app-text-input\r\n        formControlName=\"password\"\r\n        [label]=\"'Password'\"\r\n        [type]=\"'password'\"\r\n      ></app-text-input>\r\n\r\n      <ul class=\"text-danger list-unstyled\" *ngIf=\"errors\">\r\n        <li *ngFor=\"let error of errors\">{{ error }}</li>\r\n      </ul>\r\n\r\n      <button\r\n        [disabled]=\"registerForm.invalid\"\r\n        class=\"btn btn-lg btn-primary btn-block\"\r\n        type=\"submit\"\r\n      >\r\n        Sign Up\r\n      </button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Router, ActivatedRoute } from '@angular/router';\r\nimport { AccountService } from './../account.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  returnUrl: string;\r\n\r\n  constructor(\r\n    private accService: AccountService,\r\n    private router: Router,\r\n    private activatedRoutes: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.returnUrl =\r\n      this.activatedRoutes.snapshot.queryParams.returnUrl || '/shop';\r\n    this.createLoginForm();\r\n  }\r\n\r\n  createLoginForm() {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$'),\r\n      ]),\r\n      password: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.accService.login(this.loginForm.value).subscribe(\r\n      () => {\r\n        console.log('user logged in');\r\n        this.router.navigateByUrl(this.returnUrl);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center mt-5\">\r\n  <div class=\"col-3\">\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"text-center mb-4\">\r\n        <h1 class=\"h3 mb-3 font-weight-normal\">Login</h1>\r\n      </div>\r\n      <app-text-input\r\n        formControlName=\"email\"\r\n        [label]=\"'Email Address'\"\r\n      ></app-text-input>\r\n      <app-text-input\r\n        formControlName=\"password\"\r\n        [label]=\"'Password'\"\r\n        [type]=\"'password'\"\r\n      ></app-text-input>\r\n      <button\r\n        [disabled]=\"loginForm.invalid\"\r\n        class=\"btn btn-lg btn-primary btn-block\"\r\n        type=\"submit\"\r\n      >\r\n        Sign in\r\n      </button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { SharedModule } from './../shared/shared.module';\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegisterComponent],\r\n  imports: [CommonModule, AccountRoutingModule, SharedModule],\r\n})\r\nexport class AccountModule {}\r\n","import { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AccountRoutingModule {}\r\n"]}